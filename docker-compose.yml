version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "9090:9090"
    restart: unless-stopped
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      # Uncomment and set these for your environment
      #- HANA_HOST=your-hana-host.com
      #- HANA_PORT=443
      #- HANA_USER=your-username
      #- HANA_PASSWORD=your-password
      # Or use HANA_USERKEY
      #- HANA_USERKEY=YOUR_KEY
      - API_KEYS=your-api-key-1,your-api-key-2
      - AUTH_REQUIRED=true
      - CORS_ORIGINS=*
      - RATE_LIMIT_PER_MINUTE=100
      - ENFORCE_HTTPS=false  # Typically managed by reverse proxy
      - PROMETHEUS_ENABLED=true
      - PROMETHEUS_PORT=9090
      - CONNECTION_POOL_SIZE=10
    volumes:
      - api_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
  # Uncomment to add a reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   depends_on:
  #     - api
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   restart: unless-stopped
      
  # Uncomment to add Prometheus for metrics collection
  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   depends_on:
  #     - api
  #   restart: unless-stopped
      
  # Uncomment to add Grafana for metrics visualization
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   depends_on:
  #     - prometheus
  #   restart: unless-stopped

volumes:
  api_logs:
  # prometheus_data:
  # grafana_data: