name: API CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/hana_ai/api/**'
      - 'tests/api/**'
      - 'requirements-api.txt'
      - 'Dockerfile'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/hana_ai/api/**'
      - 'tests/api/**'
      - 'requirements-api.txt'
      - 'Dockerfile'
      - '.github/workflows/api-ci.yml'

jobs:
  test:
    name: Run API Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-api.txt
        pip install pytest pytest-cov httpx
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/api --cov=hana_ai.api --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
        
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        pip install -e .
        pip install -r requirements-api.txt
    
    - name: Run linters
      run: |
        flake8 src/hana_ai/api tests/api
        black --check src/hana_ai/api tests/api
        isort --check-only src/hana_ai/api tests/api
        mypy src/hana_ai/api
        
  build:
    name: Build Docker Image
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract branch name
      shell: bash
      run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
    
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/hana-ai-api:${{ env.BRANCH_NAME }}
          ghcr.io/${{ github.repository }}/hana-ai-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security check
      run: |
        bandit -r src/hana_ai/api -f json -o bandit-results.json || true
    
    - name: Run Safety check
      run: |
        safety check -r requirements-api.txt --json > safety-results.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: |
          bandit-results.json
          safety-results.json